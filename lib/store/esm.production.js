import{useState as e,useEffect as t,useTreeId as r}from"fiddlehead";let n=e=>{if(null==e||e.constructor!==Object)throw new TypeError("The store's data must be a plain object.");let t=e,r=new Set;return{get data(){return t},setData(e){e(t),r.forEach((e=>{e(t)}))},subscribe:r.add.bind(r),unsubscribe:r.delete.bind(r)}},o=(r,n,o)=>{let a=e(n(r.data));return t((()=>{let e=e=>{void 0===o?a[1](n(e)):a[1]((t=>{let r=n(e);return o(t,r)?t:r}))};return r.subscribe(e),()=>{r.unsubscribe(e)}}),[r,n,o]),a[0]},a=(e,t)=>r=>{e.setData((e=>{t(e,r)}))},i=new WeakMap,l=(e,t)=>{let o=r(),a=i.get(o);void 0===a&&(a=new WeakMap,i.set(o,a)),a.has(e)||a.set(e,n(t))},u=e=>{let t,n=r(),o=i.get(n);if(void 0!==o&&(t=o.get(e)),void 0===t)throw new ReferenceError("Cannot access a store before initialization.");return t},s=(e,t,r)=>{let n=u(e);return o(n,t,r)},b=(e,t)=>{let r=u(e);return a(r,t)};export{n as createStore,o as useGlobalStoreRead,a as useGlobalStoreWrite,l as useStoreInit,s as useStoreRead,b as useStoreWrite};
