import{useState as e,useEffect as t,resolveRootVNode as r}from"hook";let n=e=>{if(null==e||e.constructor!==Object)throw new Error("Store data must be a plain object");let t=e,r=new Set;return{get data(){return t},setData(e){e(t),r.forEach((e=>{e(t)}))},subscribe:r.add.bind(r),unsubscribe:r.delete.bind(r)}},o=(r,n,o)=>{let l=e(n(r.data));return t((()=>{let e=e=>{void 0===o?l[1](n(e)):l[1]((t=>{let r=n(e);return o(t,r)?t:r}))};return r.subscribe(e),()=>{r.unsubscribe(e)}}),[r,n,o]),l[0]},l=(e,t)=>r=>{e.setData((e=>{t(e,r)}))},u=new WeakMap,a=e=>{let t=r();u.has(t)||u.set(t,n(e))},i=()=>{let e=r(),t=u.get(e);if(void 0===t)throw new Error("Store has not been applied");return t},b=(e,t)=>{let r=i();return o(r,e,t)},s=e=>{let t=i();return l(t,e)};export{a as applyStore,n as createStore,o as useGlobalReadableStore,l as useGlobalWritableStore,b as useReadableStore,s as useWritableStore};
